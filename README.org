* obs-websocket-el

Totally bubblegum-and-string at the moment.

You'll need [[https://obsproject.com/][Open Broadcaster Software]] and the [[https://obsproject.com/forum/resources/obs-websocket-remote-control-obs-studio-from-websockets.466/][obs-websocket]] plugin for
it. Set it up in =Tools > WebSockets Server Settings=. Set a password
there.

You will also need [[https://elpa.gnu.org/packages/websocket.html][websocket]], which is available from GNU ELPA. You can install it with
=M-x package-install RET websocket RET=.

You will probably be able to use =M-x obs-websocket-connect= to
connect to your OBS server. I have no idea if it will work for anyone
but me, though. Good luck!

You can use =(setq obs-websocket-password "yourpasswordhere")=
in your Emacs configuration file so that it won't prompt you for the password.

Here's my config. It uses use-package and hydra.

#+begin_src emacs-lisp
(use-package websocket)
(defun my/twitch-message (text)
  (interactive "MText: ")
  (with-current-buffer
      (get-buffer-create "Twitch message")
    (erase-buffer)
    (insert text)
    (goto-char (point-min))))
(use-package obs-websocket
  :config
  (defhydra my/obs-websocket (:exit t)
    "Control Open Broadcast Studio"
    ("c" (obs-websocket-connect) "Connect")
    ("d" (obs-websocket-send "SetCurrentProgramScene" :scene-name "Desktop") "Desktop")
    ("e" (obs-websocket-send "SetCurrentProgramScene" :scene-name "Emacs") "Emacs")
    ("i" (obs-websocket-send "SetCurrentProgramScene" :scene-name "Intermission") "Intermission")
    ("v" (browse-url "https://twitch.tv/sachachua"))
    ("m" my/twitch-message "Message")
    ("t" my/twitch-message "Message")
    ("<f8>" my/twitch-message "Message") ;; Then I can just f8 f8
    ("sb" (obs-websocket-send "StartStream") "Stream - begin")
    ("se" (obs-websocket-send "StopStream") "Stream - end"))
  (global-set-key (kbd "<f8>") #'my/obs-websocket/body)
  :load-path "~/code/obs-websocket-el" :ensure nil)
#+end_src

Here is another config option using =use-package= and =transient= features standard in Emacs 30:

#+begin_src emacs-lisp
(use-package websocket
  :ensure t
  :defer t)

(use-package obs-websocket
  :ensure t
  :after (websocket)
  :vc (:url "https://github.com/sachac/obs-websocket-el.git"
            :rev :newest)
  :bind (("<f8>" . my/obs-websocket-tmenu))
  :config
  (transient-define-prefix my/obs-websocket-tmenu ()
    "Transient menu for controlling OBS via websocket"
    ["Connection"
     ("c" "Connect to OBS" obs-websocket-connect)]
    ["Streaming"
     ("sb" "Stream - begin"
      (lambda () (interactive)
        (obs-websocket-send "StartStream")))
     ("se" "Stream - end"
      (lambda () (interactive)
        (obs-websocket-send "StopStream")))]
    ["Scenes"
     ("d" "Desktop"
      (lambda () (interactive)
        (obs-websocket-send "SetCurrentProgramScene" :sceneName "Desktop")))
     ("e" "Emacs"
      (lambda () (interactive)
        (obs-websocket-send "SetCurrentProgramScene" :sceneName "Emacs")))
     ("i" "Intermission"
      (lambda () (interactive)
        (obs-websocket-send "SetCurrentProgramScene" :sceneName "Intermission")))
     ("v" "Browse Channel"
      (lambda () (interactive)
        (browse-url "https://twitch.tv/<your-channel-here>")))
     ]))
#+end_src


Better installation instructions will eventually be written by
someone, if anyone wants to actually maintain this.

Protocol reference: [[https://github.com/obsproject/obs-websocket/blob/master/docs/generated/protocol.md][5.x.x Websocket Protocol Reference]]


My e-mail address is [[sacha@sachachua.com]], although I tend to reply slowly.
